swagger: '2.0'
info:
  version: '1.0.0'
  title: CARMIN a Common web API for Remote pipeline INvocation
  description: FLI/IAM REST API for exchanging data and remote calling pipelines.

  #termsOfService: http://helloreverb.com/terms/
  #contact:
    #name: Swagger API team
    #email: foo@example.com
    #url: http://swagger.io
  #license:
    #name: MIT
    #url: http://opensource.org/licenses/MIT
#host: petstore.swagger.io
#basePath: /api
security: 
  - {basicAuth:[]}
  - {apiKey:[]}
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json

securityDefinitions:
  basicAuth:
    type: basic
    description: If supported by the platform, it is possible to use HTTP
      Basic Authentication but one must call `/login_basic_http` before 
      calling any API service.
  apiKey:
      # TODO: Should we replace cookie authentication (not supported by Swagger)
      # by apiKey authentication ?
      type: apiKey
      name: api_key
      in: header
      description: If HTTP Basic authentication is not supported, calling
        `/login` allows for password checking and cookie based authentication.

paths:
  /login:
    get:
      description: |
        Check username and password and allow access to the API in case of 
        success by setting a cookie that must be used in any subsequent API
        calls.
      operationId: authenticateSession
      parameters:
        - name: username
          in: query
          description: Name of the user account.
          required: true
          type: string
          format: utf8
        - name: password
          in: query
          description: Password to verify.
          required: true
          type: string
          format: password
      responses:
        '200':
          description: Returns `success` if login is successful or `failure`
            if login and/or password is incorrect.
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorCodesAndMessage'
  /platform:
    get:
      description: Returns information about the platform
      operationId: getPlatformProperties
      produces:
        - application/json
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/platformProperties'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorCodesAndMessage'
  /studies:
    get:
      description: List all the allowed studies in terms of user right
      operationId: getStudies
      produces:
        - application/json
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/studies'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorCodesAndMessage'
    post:
      description: Create a new study. The user gets {study}_manager role.
        Returns all the information of {study} including platform-created `identifier`.
      operationId: postStudy
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: study to add in the database
          required: true
          schema:
            $ref: '#/definitions/newStudy'
      responses:
        '200':
          description: successfully create a new study
          schema:
            $ref: '#/definitions/study'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorCodesAndMessage'
  /studies/{study_name}:
    get:
      description: get study information by study name
      operationId: getStudy
      produces:
        - application/json
      parameters:
        - name: study_name
          in: path
          description: study name
          required: true
          type: string
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/study'
    put:
      description: modify some properties of a study
      operationId: putStudy
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: modify a value in the study by keyValuePair,
            i.e. description, contactEmail, base_path.
            The study name and the identifier cannot be changed.
          required: true
          schema:
            $ref: '#/definitions/keyValuePair'
        - name: study_name
          in: path
          description: study name
          required: true
          type: string
      responses:
        '200':
          description: successfully modify a study.
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorCodesAndMessage'
    delete:
      description: remove a study
      operationId: deleteStudy
      parameters:
        - name: study_name
          in: path
          description: study name
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: successful response
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorCodesAndMessage'
definitions:
  studies:
    type: array
    items:
      $ref: '#/definitions/study'
  newStudy:
    type: object
    required:
      - name
      - description
      - contactEmail
      - base_path
    properties:
      name:
        type: string
        description: study name
      description:
        type: string
        description: information about the study
      contactEmail:
        type: string
        description: email of someone that knows about this study in the platform
      base_path:
        type: string
        description: all files starting with base_path will be declared as belonging to the study
  study:
    type: object
    required:
      - name
      - identifier
      - description
      - contactEmail
      - base_path
    properties:
      name:
        type: string
        description: study name
      identifier:
        type: string
        description: study unique identifier
      description:
        type: string
        description: information about the study
      contactEmail:
        type: string
        description: email of someone that knows about this study in the platform
      base_path:
        type: string
        description: all files starting with base_path will be declared as belonging to the study
  keyValuePair:
    type: object
    required:
      - key
      - value
    properties:
      key:
        type: string
        description: the key value
      value:
        type: string ## TODO: in fact, it could be any type?
        description: the value associated with key
  platformProperties:
    type: object
    required:
      - platformName
      - supportedTransferProtocols
      - supportedModules
      - defaultLimitListExecutions
      - unsupportedMethods
      - supportedAPIVersion
    properties:
      platformName:
        type: string
        description: Name of the platform.
      APIErrorCodesAndMessages:
        type: array
        items:
          $ref: '#/definitions/errorCodesAndMessage'
      supportedTransferProtocols:
        type: array
        items:
          type: string
        description: Used in getExecutionResults and getAccessURL. Protocol names must be URL prefixes (e.g. “http”, “https”, “ftp”, “sftp”, “ftps”, “scp”, “webdav”). 
      supportedModules:
        type: array
        items:
          type: string # TODO: How to define an enum in Swagger ?
      defaultLimitListExecutions:
        type: integer
        format: int64
        description: The number of Executions returned by Execution.listExecution when limit is not specified.
      email:
        type: string
        format: utf8 # TODO: I do not know if utf8 is valid here.
      platformDescription:
        type: string
        format: utf8
      minAuthorizedExecutionTimeout:
        type: integer
        format: int64
      maxAuthorizedExecutionTimeout:
        type: integer
        format: int64
        description: 0 or absent means no max timeout. max has to be greater or equal to the min.
      defaultExecutionTimeout:
        type: integer
        format: int64
      unsupportedMethods:
        type: array
        items:
          type: string
        description: List of optional methods that are not supported by the platform.
      maxSizeDirectTransfer:
        type: integer
        format: int64
        description: The maximal size of files and directories that can be transferred by methods Path.uploadPath and Path.downloadPath.
      defaultStudy:
        type: string
      supportedAPIVersion:
        type: string
  errorCodesAndMessage:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
