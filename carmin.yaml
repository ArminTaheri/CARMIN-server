swagger: '2.0'
info:
  version: '1.0.0'
  title: CARMIN a Common web API for Remote pipeline INvocation
  description: FLI/IAM REST API for exchanging data and remote calling pipelines.
  # license TODO ?
  # termsOfService TODO ?
  # contact TODO ?
schemes:
  # - TODO should we include http ?
  - https 
consumes:
  - application/json
produces:
  - application/json

securityDefinitions:
  apiKey:
      type: apiKey
      name: apikey
      in: header
      description: An API key that must be provided the platform.
security: 
  - apiKey: []

paths:
  /platform:
    get:
      description: Returns information about the platform
      operationId: getPlatformProperties
      security: []
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/PlatformProperties'
        default:
          $ref: '#/responses/GenericError'
  /executions:
    get:
      description: |
        list all execution Ids in the platform which are ordered in decreasing submission time.
      operationId: getExecutions
      produces:
        - application/json
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Execution'
        default:
          $ref: '#/responses/GenericError'
    post:
      description: |
        Initializes an execution. Does not start it. 
        # TODO : or start it?
      operationId: initExecution
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Execution'
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/Execution'
        default:
          $ref: '#/responses/GenericError'
  /executions/{executionIdentifier}:
    parameters:
      - name: executionIdentifier
        in: path
        required: true      
        type: string
        format: ascii
    get:
      description: get information about an execution
      operationId: getExecution
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/Execution'
        default:
          $ref: '#/responses/GenericError'
    put:
      description: |
        Modify an execution. TODO : specify what can be updated
      operationId: updateExecution
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Execution'
      responses:
        '200':
          description: successful response
        default:
          $ref: '#/responses/GenericError'
  /executions/{executionIdentifier}/stdout:
    get:
      description: get stdout of an execution
      operationId: getStdout
      produces:
      - text/plain
      - application/json
      parameters:
      - name: executionIdentifier
        in: path
        required: true      
        type: string
        format: ascii
      responses:
        '200':
          description: successful response
          schema:
            type: string
        default:
          $ref: '#/responses/GenericError'
  /executions/{executionIdentifier}/stderr:
    get:
      description: get stderr of an execution
      operationId: getStderr
      produces:
      - text/plain
      - application/json
      parameters:
      - name: executionIdentifier
        in: path
        required: true      
        type: string
        format: ascii
      responses:
        '200':
          description: successful response
          schema:
            type: string
        default:
          $ref: '#/responses/GenericError'
  /executions/{executionIdentifier}/play:
    put:
      description: play an execution
      operationId: getStudyExecutionsExecutionPlay
      parameters:
      - name: executionIdentifier
        in: path
        required: true      
        type: string
        format: ascii
      responses:
        '200':
          description: successful response
        default:
          $ref: '#/responses/GenericError'
  /executions/{executionIdentifier}/kill:
    put:
      description: kill an execution
      operationId: getStudyExecutionsExecutionKill
      parameters:
      - name: executionIdentifier
        in: path
        required: true      
        type: string
        format: ascii
      responses:
        '200':
          description: successful response
        default:
          $ref: '#/responses/GenericError'
  /executions/{executionIdentifier}/delete:
    put:
      description: |
        Delete an execution. This will kill the underlying processes (if possible)
        and free all resources associated with this execution.
      operationId: deleteExecution
      parameters:
        - name: executionIdentifier
          in: path
          required: true      
          type: string
          format: ascii
        - name: body
          in: body
          description: delete configuration
          schema:
            $ref: '#/definitions/DeleteExecutionConfiguration'
      responses:
        '200':
          description: successful response
        default:
          $ref: '#/responses/GenericError'
  /pipelines:
    get:
      description: |
        All the pipelines that the user can execute must be returned.
        It is up to the platform to return pipelines that the user cannot execute.
        When studyIdentifier is present, all the pipelines that the user can execute
        in the study must be returned. In this case, execution rights denote the rights
        to execute the pipeline in the study.
      operationId: listPipelines
      parameters:
        - name: studyIdentifier
          in: query
          type: string
          format: ascii
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Pipeline'
        default:
          $ref: '#/responses/GenericError'
  /pipelines/{pipelineIdentifier}:
    get:
      description: Show the definition of a given pipeline
      operationId: getPipeline
      parameters:
        - name: pipelineIdentifier
          in: path
          required: true
          description: pipeline identifier
          type: string
          format: ascii
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/Pipeline'
        default: 
          $ref: '#/responses/GenericError'
responses:
  GenericError:
    description: An functional or internal error occured processing the request
    schema:
      $ref: '#/definitions/ErrorCodesAndMessage'
definitions:
  PlatformProperties:
    type: object
    required:
      - supportedTransferProtocols
      - supportedModules
      - isKillExecutionSupported
      - supportedAPIVersion
    properties:
      platformName: # not present in 0.2 version, keep it as optional
        type: string
        description: Name of the platform.
      APIErrorCodesAndMessages:
        type: array
        items:
          $ref: '#/definitions/ErrorCodesAndMessage'
      supportedTransferProtocols:
        type: array
        items:
          type: string
          enum: ["http", "https", "ftp", "sftp", "ftps", "scp", "webdav"]
        description: |
          Used in getExecutionResults and getAccessURL.
          Protocol names must be URL prefixes (e.g. "http", "https", "ftp", "sftp", "ftps", "scp", "webdav"). 
      supportedModules:
        type: array
        items:
          type: string
          enum: ["Processing", "Data", "Management", "Commercial", ]
      defaultLimitListExecutions: # not present in 0.2, keep it as optional
        type: integer
        format: int64
        description: The number of Executions returned by getExecutions and getStudyExecutions when limit is not specified.
      email:
        type: string
        format: email
      platformDescription:
        type: string
      minAuthorizedExecutionTimeout:
        type: integer
        format: int64
      maxAuthorizedExecutionTimeout:
        type: integer
        format: int64
        description: 0 or absent means no max timeout. max has to be greater or equal to the min.
      defaultExecutionTimeout:
        type: integer
        format: int64
      isKillExecutionSupported:
        type: boolean
      unsupportedMethods: 
      # not present in 0.2, keep it as optional
      # keep it consistent with isKillExecutionSupported
        type: array
        items:
          type: string
        description: List of optional methods that are not supported by the platform.
      maxSizeDirectTransfer: # not present in 0.2, keep it as optional
        type: integer
        format: int64
        description: |
          The maximal size of files and directories that can be transferred
          by methods Path.uploadPath and Path.downloadPath.
      defaultStudy:
        type: string
        format: ascii
      supportedAPIVersion:
        type: string
        format: ascii
  Pipeline:
    type: object
    required:
      - identifier
      - name
      - version
      # - parameters optional in 0.2
    properties:
      identifier:
        type: string
        format: ascii
      name:
        type: string
      version:
        type: string
      description:
        type: string
      canExecute:
        type: boolean
      parameters:
        type: array
        items:
          $ref: '#/definitions/PipelineParameter'
  PipelineParameter:
    type: object
    required:
      - name
      - type
      - isOptional
      - isReturnedValue
    properties:
      name:
        type: string
        format: ascii
      type:
        $ref: '#/definitions/ParameterType'
      isOptional:
        type: boolean
      isReturnedValue:
        type: boolean
      defaultValue:
        description: Default value. It can be any type.
      description:
        type: string
        format: utf8
  ParameterType:
    type: string
    enum: [File,String,Boolean,Int64,Double,List]
  ErrorCodesAndMessage:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int64
      message:
        type: string
  Execution:
    type: object
    required:
      - identifier
      - name
      - pipelineIdentifier
      - status
    properties:
      identifier:
        type: string
        format: ascii
        description: execution id
      name:
        type: string
        description: execution name
      pipelineIdentifier:
        type: string
        format: ascii
        description: which pipeline that started this execution
      timeout:
        type: integer
        format: int64
      status:
        type: string
        enum: [initializing,ready,running,finished,
        initialization_failed,execution_failed,unknown,killed]
      inputValues:
        type: object
        additionalProperties: true
        description: represent the input as a key/value object. The types should respect the parameters of the pipeline used for the execution
      returnedFiles:
        type: object
        additionalProperties:
          type: string
          format: url
      studyIdentifier:
        type: string
        format: ascii
      errorCode:
        type: integer
        format: int64
      startDate:
        type: integer
        format: int64
      endDate:
        type: integer
        format: int64
  DeleteExecutionConfiguration:
    type: object
    required: [deleteFiles]
    properties:
      deleteFiles:
        type: boolean